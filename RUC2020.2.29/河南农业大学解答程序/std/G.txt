#include <bits/stdc++.h>
using namespace std;
const int MAXN = 110;
string mp[MAXN];
int dir[8][2] = { 1, 0, 1, 1, 0, 1, -1, 1, -1, 0, -1, -1, 0, -1, 1, -1 };
bool vis[MAXN][MAXN];
int n, m, ans;
bool check(int x, int y) { // 在地图内没有走过且为"#"
	if (x >= 0 && y >= 0 && x < n && y < m && mp[x][y] == '#' && !vis[x][y])
		return true;
	return false;
}
void dfs(int x, int y) {
	vis[x][y] = true;
	for (int i = 0; i < 8; i++) {
		int xx = x + dir[i][0];
		int yy = y + dir[i][1];
		if (check(xx, yy))  // 判断可行条件
			dfs(xx, yy);
	}
}
int main()
{
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> mp[i];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {  // 新的连通块
			if (mp[i][j] == '#' && !vis[i][j])
				dfs(i, j), ans++;
		}
	}
	cout << ans << endl;
	return 0;
}